Æb
zC:\Users\Ale\Desktop\MichaelPage\Backend\InventoryManager\API\InventoryManager.API\Controllers\InventoryItemsController.cs
	namespace 	
InventoryManager
 
. 
API 
. 
Controllers *
{ 
[ 
Route 

(
 
$str 
) 
] 
[		 
ApiController		 
]		 
public

 

class

 $
InventoryItemsController

 )
:

* +
ControllerBase

, :
{ 
private 
readonly !
IInventoryListService .
_service/ 7
;7 8
private 
readonly 
ILogger  
<  !$
InventoryItemsController! 9
>9 :
_logger; B
;B C
public $
InventoryItemsController '
(' (!
IInventoryListService( =
service> E
,E F
ILoggerG N
<N O$
InventoryItemsControllerO g
>g h
loggeri o
)o p
{ 	
this 
. 
_service 
= 
service #
;# $
this 
. 
_logger 
= 
logger !
;! "
} 	
[ 	
HttpGet	 
] 
public 
IEnumerable 
< 
InventoryItemDTO +
>+ ,
Get- 0
(0 1
)1 2
{ 	
IEnumerable 
< 
InventoryItemDTO (
>( )
result* 0
=1 2
null3 7
;7 8
try 
{ 
result 
= 
_service !
.! " 
GetAllInventoryItems" 6
(6 7
)7 8
;8 9
} 
catch 
( 
System 
. 
	Exception #
e$ %
)% &
{   
_logger!! 
.!! 
LogInformation!! &
(!!& '
e!!' (
.!!( )
Message!!) 0
)!!0 1
;!!1 2
}"" 
return$$ 
result$$ 
;$$ 
}%% 	
[(( 	
HttpGet((	 
((( 
$str(( 
)(( 
](( 
public)) 
async)) 
Task)) 
<)) 
IEnumerable)) %
<))% &
InventoryItemDTO))& 6
>))6 7
>))7 8
GetAsync))9 A
())A B
)))B C
{** 	
Task++ 
<++ 
List++ 
<++ 
InventoryItemDTO++ &
>++& '
>++' (
result++) /
=++0 1
null++2 6
;++6 7
try-- 
{.. 
result// 
=// 
_service// !
.//! "%
GetAllInventoryItemsAsync//" ;
(//; <
)//< =
;//= >
}00 
catch11 
(11 
System11 
.11 
	Exception11 #
e11$ %
)11% &
{22 
_logger33 
.33 
LogInformation33 &
(33& '
e33' (
.33( )
Message33) 0
)330 1
;331 2
}44 
return66 
await66 
result66 
;66  
}77 	
[:: 	
HttpGet::	 
(:: 
$str:: 
):: 
]:: 
public<< 
InventoryItemDTO<< 
Get<<  #
(<<# $
int<<$ '
id<<( *
)<<* +
{== 	
InventoryItemDTO>> 
result>> #
=>>$ %
null>>& *
;>>* +
try@@ 
{AA 
resultBB 
=BB 
_serviceBB !
.BB! "
GetInventoryItemBB" 2
(BB2 3
idBB3 5
)BB5 6
;BB6 7
}CC 
catchDD 
(DD 
SystemDD 
.DD 
	ExceptionDD #
eDD$ %
)DD% &
{EE 
_loggerFF 
.FF 
LogInformationFF &
(FF& '
eFF' (
.FF( )
MessageFF) 0
)FF0 1
;FF1 2
}GG 
returnII 
resultII 
;II 
}JJ 	
[MM 	
HttpGetMM	 
(MM 
$strMM 0
)MM0 1
]MM1 2
publicNN 
InventoryItemDTONN ,
 GetBussinessInventoryItemExampleNN  @
(NN@ A
)NNA B
{OO 	
InventoryItemDTOPP 
resultPP #
=PP$ %
nullPP& *
;PP* +
tryRR 
{SS 
resultTT 
=TT 
_serviceTT !
.TT! ",
 GetBussinessInventoryItemExampleTT" B
(TTB C
)TTC D
;TTD E
}UU 
catchVV 
(VV 
SystemVV 
.VV 
	ExceptionVV #
eVV$ %
)VV% &
{WW 
_loggerXX 
.XX 
LogInformationXX &
(XX& '
eXX' (
.XX( )
MessageXX) 0
)XX0 1
;XX1 2
}YY 
return[[ 
result[[ 
;[[ 
}\\ 	
[__ 	
HttpPost__	 
]__ 
public`` 
ValidationResultDTO`` "
Post``# '
(``' (
[``( )
FromBody``) 1
]``1 2
InventoryItemDTO``3 C
value``D I
)``I J
{aa 	
trybb 
{cc 
returndd 
_servicedd 
.dd  
Createdd  &
(dd& '
valuedd' ,
)dd, -
;dd- .
}ee 
catchff 
(ff 
Systemff 
.ff 
	Exceptionff #
eff$ %
)ff% &
{gg 
_loggerhh 
.hh 
LogInformationhh &
(hh& '
ehh' (
.hh( )
Messagehh) 0
)hh0 1
;hh1 2
returnjj 
newjj 
ValidationResultDTOjj .
(jj. /
)jj/ 0
{jj1 2
Resultjj3 9
=jj: ;
ResultTypeDTOjj< I
.jjI J
ErrorjjJ O
,jjO P
ErrorsjjQ W
=jjX Y
newjjZ ]
Listjj^ b
<jjb c
stringjjc i
>jji j
(jjj k
)jjk l
{jjm n
ejjo p
.jjp q
Messagejjq x
}jjy z
}jj{ |
;jj| }
}kk 
}ll 	
[oo 	
HttpPostoo	 
(oo 
$stroo 
)oo 
]oo  
publicpp 
asyncpp 
Taskpp 
<pp 
ValidationResultDTOpp -
>pp- .
	PostAsyncpp/ 8
(pp8 9
[pp9 :
FromBodypp: B
]ppB C
InventoryItemDTOppD T
valueppU Z
)ppZ [
{qq 	
tryrr 
{ss 
returntt 
awaittt 
_servicett %
.tt% &
CreateAsynctt& 1
(tt1 2
valuett2 7
)tt7 8
;tt8 9
}uu 
catchvv 
(vv 
Systemvv 
.vv 
	Exceptionvv #
evv$ %
)vv% &
{ww 
_loggerxx 
.xx 
LogInformationxx &
(xx& '
exx' (
.xx( )
Messagexx) 0
)xx0 1
;xx1 2
returnzz 
awaitzz 
newzz  
Taskzz! %
<zz% &
ValidationResultDTOzz& 9
>zz9 :
(zz: ;
(zz; <
)zz< =
=>zz> @
newzzA D
ValidationResultDTOzzE X
(zzX Y
)zzY Z
{zz[ \
Resultzz] c
=zzd e
ResultTypeDTOzzf s
.zzs t
Errorzzt y
,zzy z
Errors	zz{ Å
=
zzÇ É
new
zzÑ á
List
zzà å
<
zzå ç
string
zzç ì
>
zzì î
(
zzî ï
)
zzï ñ
{
zzó ò
e
zzô ö
.
zzö õ
Message
zzõ ¢
}
zz£ §
}
zz• ¶
)
zz¶ ß
;
zzß ®
}{{ 
}|| 	
[ 	
HttpPut	 
( 
$str 
) 
] 
public
ÄÄ !
ValidationResultDTO
ÄÄ "
Put
ÄÄ# &
(
ÄÄ& '
int
ÄÄ' *
id
ÄÄ+ -
,
ÄÄ- .
[
ÄÄ/ 0
FromBody
ÄÄ0 8
]
ÄÄ8 9
InventoryItemDTO
ÄÄ: J
value
ÄÄK P
)
ÄÄP Q
{
ÅÅ 	
try
ÇÇ 
{
ÉÉ 
return
ÑÑ 
_service
ÑÑ 
.
ÑÑ  
Update
ÑÑ  &
(
ÑÑ& '
id
ÑÑ' )
,
ÑÑ) *
value
ÑÑ+ 0
)
ÑÑ0 1
;
ÑÑ1 2
}
ÖÖ 
catch
ÜÜ 
(
ÜÜ 
System
ÜÜ 
.
ÜÜ 
	Exception
ÜÜ #
e
ÜÜ$ %
)
ÜÜ% &
{
áá 
_logger
àà 
.
àà 
LogInformation
àà &
(
àà& '
e
àà' (
.
àà( )
Message
àà) 0
)
àà0 1
;
àà1 2
return
ââ 
new
ââ !
ValidationResultDTO
ââ .
(
ââ. /
)
ââ/ 0
{
ââ1 2
Result
ââ3 9
=
ââ: ;
ResultTypeDTO
ââ< I
.
ââI J
Error
ââJ O
,
ââO P
Errors
ââQ W
=
ââX Y
new
ââZ ]
List
ââ^ b
<
ââb c
string
ââc i
>
ââi j
(
ââj k
)
ââk l
{
ââm n
e
ââo p
.
ââp q
Message
ââq x
}
âây z
}
ââ{ |
;
ââ| }
}
ää 
}
ãã 	
[
éé 	

HttpDelete
éé	 
(
éé 
$str
éé 
)
éé 
]
éé 
public
èè !
ValidationResultDTO
èè "
Delete
èè# )
(
èè) *
int
èè* -
id
èè. 0
)
èè0 1
{
êê 	
try
ëë 
{
íí 
return
ìì 
_service
ìì 
.
ìì  
Delete
ìì  &
(
ìì& '
id
ìì' )
)
ìì) *
;
ìì* +
}
îî 
catch
ïï 
(
ïï 
System
ïï 
.
ïï 
	Exception
ïï #
e
ïï$ %
)
ïï% &
{
ññ 
_logger
óó 
.
óó 
LogInformation
óó &
(
óó& '
e
óó' (
.
óó( )
Message
óó) 0
)
óó0 1
;
óó1 2
return
òò 
new
òò !
ValidationResultDTO
òò .
(
òò. /
)
òò/ 0
{
òò1 2
Result
òò3 9
=
òò: ;
ResultTypeDTO
òò< I
.
òòI J
Error
òòJ O
,
òòO P
Errors
òòQ W
=
òòX Y
new
òòZ ]
List
òò^ b
<
òòb c
string
òòc i
>
òòi j
(
òòj k
)
òòk l
{
òòm n
e
òòo p
.
òòp q
Message
òòq x
}
òòy z
}
òò{ |
;
òò| }
}
ôô 
}
öö 	
[
ùù 	

HttpDelete
ùù	 
(
ùù 
$str
ùù *
)
ùù* +
]
ùù+ ,
public
ûû !
ValidationResultDTO
ûû "
DeleteByName
ûû# /
(
ûû/ 0
string
ûû0 6
name
ûû7 ;
)
ûû; <
{
üü 	
try
†† 
{
°° 
return
¢¢ 
_service
¢¢ 
.
¢¢  
DeleteByName
¢¢  ,
(
¢¢, -
name
¢¢- 1
)
¢¢1 2
;
¢¢2 3
}
££ 
catch
§§ 
(
§§ 
System
§§ 
.
§§ 
	Exception
§§ #
e
§§$ %
)
§§% &
{
•• 
_logger
¶¶ 
.
¶¶ 
LogInformation
¶¶ &
(
¶¶& '
e
¶¶' (
.
¶¶( )
Message
¶¶) 0
)
¶¶0 1
;
¶¶1 2
return
ßß 
new
ßß !
ValidationResultDTO
ßß .
(
ßß. /
)
ßß/ 0
{
ßß1 2
Result
ßß3 9
=
ßß: ;
ResultTypeDTO
ßß< I
.
ßßI J
Error
ßßJ O
,
ßßO P
Errors
ßßQ W
=
ßßX Y
new
ßßZ ]
List
ßß^ b
<
ßßb c
string
ßßc i
>
ßßi j
(
ßßj k
)
ßßk l
{
ßßm n
e
ßßo p
.
ßßp q
Message
ßßq x
}
ßßy z
}
ßß{ |
;
ßß| }
}
®® 
}
©© 	
}
™™ 
}´´ Î
]C:\Users\Ale\Desktop\MichaelPage\Backend\InventoryManager\API\InventoryManager.API\Program.cs
	namespace 	
InventoryManager
 
{		 
public

 

class

 
Program

 
{ 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{ 	
var 
builder 
= 
WebApplication (
.( )
CreateBuilder) 6
(6 7
args7 ;
); <
;< =
builder 
. 
Services 
. 
AddControllers +
(+ ,
), -
;- .
builder 
. 
Services 
. 
	AddScoped &
<& '!
IInventoryListService' <
,< = 
InventoryListService> R
>R S
(S T
)T U
;U V
builder 
. 
Services 
. 
	AddScoped &
<& '#
IInventoryDomainService' >
,> ?"
InventoryDomainService@ V
>V W
(W X
)X Y
;Y Z
builder 
. 
Services 
. 
AddSingleton )
<) *
IRepository* 5
<5 6
InventoryItem6 C
>C D
,D E.
"InventoryManagerInMemoryRepositoryF h
>h i
(i j
)j k
;k l
builder 
. 
Services 
. #
AddEndpointsApiExplorer 4
(4 5
)5 6
;6 7
builder 
. 
Services 
. 
AddSwaggerGen *
(* +
)+ ,
;, -
var 
app 
= 
builder 
. 
Build #
(# $
)$ %
;% &
if 
( 
app 
. 
Environment 
.  
IsDevelopment  -
(- .
). /
)/ 0
{ 
app   
.   

UseSwagger   
(   
)    
;    !
app!! 
.!! 
UseSwaggerUI!!  
(!!  !
)!!! "
;!!" #
}"" 
app$$ 
.$$ 
UseAuthorization$$  
($$  !
)$$! "
;$$" #
app'' 
.'' 
MapControllers'' 
('' 
)''  
;''  !
app)) 
.)) 
Run)) 
()) 
))) 
;)) 
}** 	
}++ 
},, 