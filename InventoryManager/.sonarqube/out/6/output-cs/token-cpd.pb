òf
zC:\Users\Ale\Desktop\MichaelPage\Backend\InventoryManager\API\InventoryManager.API\Controllers\InventoryItemsController.cs
	namespace 	
InventoryManager
 
. 
API 
. 
Controllers *
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
public 

class $
InventoryItemsController )
:* +
ControllerBase, :
{ 
private 
readonly !
IInventoryListService .
_service/ 7
;7 8
private 
readonly 
ILogger  
<  !$
InventoryItemsController! 9
>9 :
_logger; B
;B C
public $
InventoryItemsController '
(' (!
IInventoryListService( =
service> E
,E F
ILoggerG N
<N O$
InventoryItemsControllerO g
>g h
loggeri o
)o p
{ 	
this   
.   
_service   
=   
service   #
;  # $
this!! 
.!! 
_logger!! 
=!! 
logger!! !
;!!! "
}"" 	
[)) 	
HttpGet))	 
])) 
public** 
IEnumerable** 
<** 
InventoryItemDTO** +
>**+ ,
Get**- 0
(**0 1
)**1 2
{++ 	
IEnumerable,, 
<,, 
InventoryItemDTO,, (
>,,( )
result,,* 0
=,,1 2
null,,3 7
;,,7 8
try.. 
{// 
result00 
=00 
_service00 !
.00! " 
GetAllInventoryItems00" 6
(006 7
)007 8
;008 9
}11 
catch22 
(22 
System22 
.22 
	Exception22 #
e22$ %
)22% &
{33 
_logger44 
.44 
LogInformation44 &
(44& '
e44' (
.44( )
Message44) 0
)440 1
;441 2
}55 
return77 
result77 
;77 
}88 	
[>> 	
HttpGet>>	 
(>> 
$str>> 
)>> 
]>> 
public?? 
async?? 
Task?? 
<?? 
IEnumerable?? %
<??% &
InventoryItemDTO??& 6
>??6 7
>??7 8
GetAsync??9 A
(??A B
)??B C
{@@ 	
TaskAA 
<AA 
ListAA 
<AA 
InventoryItemDTOAA &
>AA& '
>AA' (
?AA( )
resultAA* 0
=AA1 2
nullAA3 7
;AA7 8
tryCC 
{DD 
resultEE 
=EE 
_serviceEE !
.EE! "%
GetAllInventoryItemsAsyncEE" ;
(EE; <
)EE< =
;EE= >
}FF 
catchGG 
(GG 
SystemGG 
.GG 
	ExceptionGG #
eGG$ %
)GG% &
{HH 
_loggerII 
.II 
LogInformationII &
(II& '
eII' (
.II( )
MessageII) 0
)II0 1
;II1 2
}JJ 
returnLL 
awaitLL 
resultLL 
;LL  
}MM 	
[UU 	
HttpGetUU	 
(UU 
$strUU 
)UU 
]UU 
publicVV 
InventoryItemDTOVV 
GetVV  #
(VV# $
intVV$ '
idVV( *
)VV* +
{WW 	
InventoryItemDTOXX 
resultXX #
=XX$ %
nullXX& *
;XX* +
tryZZ 
{[[ 
result\\ 
=\\ 
_service\\ !
.\\! "
GetInventoryItem\\" 2
(\\2 3
id\\3 5
)\\5 6
;\\6 7
}]] 
catch^^ 
(^^ 
System^^ 
.^^ 
	Exception^^ #
e^^$ %
)^^% &
{__ 
_logger`` 
.`` 
LogInformation`` &
(``& '
e``' (
.``( )
Message``) 0
)``0 1
;``1 2
}aa 
returncc 
resultcc 
;cc 
}dd 	
[kk 	
HttpGetkk	 
(kk 
$strkk 0
)kk0 1
]kk1 2
publicll 
InventoryItemDTOll ,
 GetBussinessInventoryItemExamplell  @
(ll@ A
)llA B
{mm 	
trynn 
{oo 
returnpp 
_servicepp 
.pp  ,
 GetBussinessInventoryItemExamplepp  @
(pp@ A
)ppA B
;ppB C
}qq 
catchrr 
(rr 
Systemrr 
.rr 
	Exceptionrr #
err$ %
)rr% &
{ss 
_loggertt 
.tt 
LogInformationtt &
(tt& '
ett' (
.tt( )
Messagett) 0
)tt0 1
;tt1 2
returnvv 
nullvv 
;vv 
}ww 
}xx 	
[
ÄÄ 	
HttpPost
ÄÄ	 
]
ÄÄ 
public
ÅÅ 
ValidationResult
ÅÅ 
Post
ÅÅ  $
(
ÅÅ$ %
[
ÅÅ% &
FromBody
ÅÅ& .
]
ÅÅ. /
InventoryItemDTO
ÅÅ0 @
value
ÅÅA F
)
ÅÅF G
{
ÇÇ 	
try
ÉÉ 
{
ÑÑ 
return
ÖÖ 
_service
ÖÖ 
.
ÖÖ  
Create
ÖÖ  &
(
ÖÖ& '
value
ÖÖ' ,
)
ÖÖ, -
;
ÖÖ- .
}
ÜÜ 
catch
áá 
(
áá 
System
áá 
.
áá 
	Exception
áá #
e
áá$ %
)
áá% &
{
àà 
_logger
ââ 
.
ââ 
LogInformation
ââ &
(
ââ& '
e
ââ' (
.
ââ( )
Message
ââ) 0
)
ââ0 1
;
ââ1 2
var
ãã 
result
ãã 
=
ãã 
new
ãã  
ValidationResult
ãã! 1
(
ãã1 2
)
ãã2 3
;
ãã3 4
result
åå 
.
åå 
Errors
åå 
.
åå 
Add
åå !
(
åå! "
new
åå" %
ValidationFailure
åå& 7
(
åå7 8
String
åå8 >
.
åå> ?
Empty
åå? D
,
ååD E
e
ååF G
.
ååG H
Message
ååH O
)
ååO P
)
ååP Q
;
ååQ R
return
éé 
result
éé 
;
éé 
}
èè 
}
êê 	
[
òò 	
HttpPost
òò	 
(
òò 
$str
òò 
)
òò 
]
òò  
public
ôô 
async
ôô 
Task
ôô 
<
ôô 
ValidationResult
ôô *
>
ôô* +
	PostAsync
ôô, 5
(
ôô5 6
[
ôô6 7
FromBody
ôô7 ?
]
ôô? @
InventoryItemDTO
ôôA Q
value
ôôR W
)
ôôW X
{
öö 	
try
õõ 
{
úú 
return
ùù 
await
ùù 
_service
ùù %
.
ùù% &
CreateAsync
ùù& 1
(
ùù1 2
value
ùù2 7
)
ùù7 8
;
ùù8 9
}
ûû 
catch
üü 
(
üü 
System
üü 
.
üü 
	Exception
üü #
e
üü$ %
)
üü% &
{
†† 
_logger
°° 
.
°° 
LogInformation
°° &
(
°°& '
e
°°' (
.
°°( )
Message
°°) 0
)
°°0 1
;
°°1 2
return
££ 
await
££ 
new
££  
Task
££! %
<
££% &
ValidationResult
££& 6
>
££6 7
(
££7 8
(
££8 9
)
££9 :
=>
££; =
{
§§ 
var
•• 
result
•• 
=
••  
new
••! $
ValidationResult
••% 5
(
••5 6
)
••6 7
;
••7 8
result
¶¶ 
.
¶¶ 
Errors
¶¶ !
.
¶¶! "
Add
¶¶" %
(
¶¶% &
new
¶¶& )
ValidationFailure
¶¶* ;
(
¶¶; <
String
¶¶< B
.
¶¶B C
Empty
¶¶C H
,
¶¶H I
e
¶¶J K
.
¶¶K L
Message
¶¶L S
)
¶¶S T
)
¶¶T U
;
¶¶U V
return
®® 
result
®® !
;
®®! "
}
©© 
)
©© 
;
©© 
}
™™ 
}
´´ 	
[
≥≥ 	
HttpPut
≥≥	 
(
≥≥ 
$str
≥≥ 
)
≥≥ 
]
≥≥ 
public
¥¥ 
ValidationResult
¥¥ 
Put
¥¥  #
(
¥¥# $
int
¥¥$ '
id
¥¥( *
,
¥¥* +
[
¥¥, -
FromBody
¥¥- 5
]
¥¥5 6
InventoryItemDTO
¥¥7 G
value
¥¥H M
)
¥¥M N
{
µµ 	
try
∂∂ 
{
∑∑ 
return
∏∏ 
_service
∏∏ 
.
∏∏  
Update
∏∏  &
(
∏∏& '
id
∏∏' )
,
∏∏) *
value
∏∏+ 0
)
∏∏0 1
;
∏∏1 2
}
ππ 
catch
∫∫ 
(
∫∫ 
System
∫∫ 
.
∫∫ 
	Exception
∫∫ #
e
∫∫$ %
)
∫∫% &
{
ªª 
_logger
ºº 
.
ºº 
LogInformation
ºº &
(
ºº& '
e
ºº' (
.
ºº( )
Message
ºº) 0
)
ºº0 1
;
ºº1 2
var
ææ 
result
ææ 
=
ææ 
new
ææ  
ValidationResult
ææ! 1
(
ææ1 2
)
ææ2 3
;
ææ3 4
result
øø 
.
øø 
Errors
øø 
.
øø 
Add
øø !
(
øø! "
new
øø" %
ValidationFailure
øø& 7
(
øø7 8
String
øø8 >
.
øø> ?
Empty
øø? D
,
øøD E
e
øøF G
.
øøG H
Message
øøH O
)
øøO P
)
øøP Q
;
øøQ R
return
¡¡ 
result
¡¡ 
;
¡¡ 
}
¬¬ 
}
√√ 	
[
ÀÀ 	

HttpDelete
ÀÀ	 
(
ÀÀ 
$str
ÀÀ 
)
ÀÀ 
]
ÀÀ 
public
ÃÃ 
ValidationResult
ÃÃ 
Delete
ÃÃ  &
(
ÃÃ& '
int
ÃÃ' *
id
ÃÃ+ -
)
ÃÃ- .
{
ÕÕ 	
try
ŒŒ 
{
œœ 
return
–– 
_service
–– 
.
––  
Delete
––  &
(
––& '
id
––' )
)
––) *
;
––* +
}
—— 
catch
““ 
(
““ 
System
““ 
.
““ 
	Exception
““ #
e
““$ %
)
““% &
{
”” 
_logger
‘‘ 
.
‘‘ 
LogInformation
‘‘ &
(
‘‘& '
e
‘‘' (
.
‘‘( )
Message
‘‘) 0
)
‘‘0 1
;
‘‘1 2
var
÷÷ 
result
÷÷ 
=
÷÷ 
new
÷÷  
ValidationResult
÷÷! 1
(
÷÷1 2
)
÷÷2 3
;
÷÷3 4
result
◊◊ 
.
◊◊ 
Errors
◊◊ 
.
◊◊ 
Add
◊◊ !
(
◊◊! "
new
◊◊" %
ValidationFailure
◊◊& 7
(
◊◊7 8
String
◊◊8 >
.
◊◊> ?
Empty
◊◊? D
,
◊◊D E
e
◊◊F G
.
◊◊G H
Message
◊◊H O
)
◊◊O P
)
◊◊P Q
;
◊◊Q R
return
ŸŸ 
result
ŸŸ 
;
ŸŸ 
}
⁄⁄ 
}
€€ 	
[
„„ 	

HttpDelete
„„	 
(
„„ 
$str
„„ *
)
„„* +
]
„„+ ,
public
‰‰ 
ValidationResult
‰‰ 
DeleteByName
‰‰  ,
(
‰‰, -
string
‰‰- 3
name
‰‰4 8
)
‰‰8 9
{
ÂÂ 	
try
ÊÊ 
{
ÁÁ 
return
ËË 
_service
ËË 
.
ËË  
DeleteByName
ËË  ,
(
ËË, -
name
ËË- 1
)
ËË1 2
;
ËË2 3
}
ÈÈ 
catch
ÍÍ 
(
ÍÍ 
System
ÍÍ 
.
ÍÍ 
	Exception
ÍÍ #
e
ÍÍ$ %
)
ÍÍ% &
{
ÎÎ 
_logger
ÏÏ 
.
ÏÏ 
LogInformation
ÏÏ &
(
ÏÏ& '
e
ÏÏ' (
.
ÏÏ( )
Message
ÏÏ) 0
)
ÏÏ0 1
;
ÏÏ1 2
var
ÓÓ 
result
ÓÓ 
=
ÓÓ 
new
ÓÓ  
ValidationResult
ÓÓ! 1
(
ÓÓ1 2
)
ÓÓ2 3
;
ÓÓ3 4
result
ÔÔ 
.
ÔÔ 
Errors
ÔÔ 
.
ÔÔ 
Add
ÔÔ !
(
ÔÔ! "
new
ÔÔ" %
ValidationFailure
ÔÔ& 7
(
ÔÔ7 8
String
ÔÔ8 >
.
ÔÔ> ?
Empty
ÔÔ? D
,
ÔÔD E
e
ÔÔF G
.
ÔÔG H
Message
ÔÔH O
)
ÔÔO P
)
ÔÔP Q
;
ÔÔQ R
return
ÒÒ 
result
ÒÒ 
;
ÒÒ 
}
ÚÚ 
}
ÛÛ 	
}
ÙÙ 
}ıı †
]C:\Users\Ale\Desktop\MichaelPage\Backend\InventoryManager\API\InventoryManager.API\Program.cs
	namespace		 	
InventoryManager		
 
{

 
public 

class 
Program 
{ 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{ 	
var 
builder 
= 
WebApplication (
.( )
CreateBuilder) 6
(6 7
args7 ;
); <
;< =
builder 
. 
Services 
. 
AddControllers +
(+ ,
), -
;- .
builder 
. 
Services 
. 
	AddScoped &
<& '!
IInventoryListService' <
,< = 
InventoryListService> R
>R S
(S T
)T U
;U V
builder 
. 
Services 
. 
	AddScoped &
<& '#
IInventoryDomainService' >
,> ?"
InventoryDomainService@ V
>V W
(W X
)X Y
;Y Z
builder 
. 
Services 
. 
AddSingleton )
<) *
IRepository* 5
<5 6
InventoryItem6 C
>C D
,D E.
"InventoryManagerInMemoryRepositoryF h
>h i
(i j
)j k
;k l
builder 
. 
Services 
. 
	AddScoped &
<& '

IValidator' 1
<1 2
InventoryItemDTO2 B
>B C
,C D%
InventoryItemDTOValidatorE ^
>^ _
(_ `
)` a
;a b
builder"" 
."" 
Services"" 
."" #
AddEndpointsApiExplorer"" 4
(""4 5
)""5 6
;""6 7
builder## 
.## 
Services## 
.## 
AddSwaggerGen## *
(##* +
)##+ ,
;##, -
var%% 
app%% 
=%% 
builder%% 
.%% 
Build%% #
(%%# $
)%%$ %
;%%% &
if(( 
((( 
app(( 
.(( 
Environment(( 
.((  
IsDevelopment((  -
(((- .
)((. /
)((/ 0
{)) 
app** 
.** 

UseSwagger** 
(** 
)**  
;**  !
app++ 
.++ 
UseSwaggerUI++  
(++  !
)++! "
;++" #
},, 
app.. 
... 
UseAuthorization..  
(..  !
)..! "
;.." #
app11 
.11 
MapControllers11 
(11 
)11  
;11  !
app33 
.33 
Run33 
(33 
)33 
;33 
}44 	
}55 
}66 